--USER
--CREATE SCHEMA IF NOT EXISTS "shop";
--DROP TABLE IF EXISTS "shop"."transaction" CASCADE;
--DROP TABLE IF EXISTS "shop"."order_item" CASCADE;
--DROP TABLE IF EXISTS "shop"."order" CASCADE;
--DROP TABLE IF EXISTS "shop"."cart_item" CASCADE;
--DROP TABLE IF EXISTS "shop"."cart" CASCADE;
--DROP TABLE IF EXISTS "shop"."product_category" CASCADE;
--DROP TABLE IF EXISTS "shop"."category" CASCADE;
--DROP TABLE IF EXISTS "shop"."product_review" CASCADE;
--DROP TABLE IF EXISTS "shop"."product" CASCADE;
--DROP TABLE IF EXISTS "shop"."user" CASCADE;


CREATE TABLE "shop"."user" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  first_name VARCHAR NULL DEFAULT NULL,
  middle_name VARCHAR NULL DEFAULT NULL,
  last_name VARCHAR NULL DEFAULT NULL,
  mobile VARCHAR NULL,
  email VARCHAR NULL,
  password_hash VARCHAR NOT NULL,
  admin BOOLEAN NOT NULL DEFAULT false,
  vendor BOOLEAN NOT NULL DEFAULT true,
  registered_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  last_login TIMESTAMPTZ NULL DEFAULT NULL,
  intro TEXT NULL DEFAULT NULL,
  profile TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id)
);
CREATE UNIQUE INDEX uq_mobile ON "shop"."user" (mobile ASC);
CREATE UNIQUE INDEX uq_email ON "shop"."user" (email ASC);
  
--PRODUCT
CREATE TABLE "shop"."product" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  user_id BIGINT NOT NULL,
  title VARCHAR NOT NULL,
  meta_title VARCHAR NULL,
  slug VARCHAR NOT NULL,
  summary TEXT NULL,
  type SMALLINT NOT NULL DEFAULT 0,
  sku VARCHAR NOT NULL,
  price FLOAT NOT NULL DEFAULT 0,
  discount FLOAT NOT NULL DEFAULT 0,
  quantity SMALLINT NOT NULL DEFAULT 0,
  visible BOOLEAN NOT NULL DEFAULT false,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  updated_date TIMESTAMPTZ NULL DEFAULT NULL,
  published_date TIMESTAMPTZ NULL DEFAULT NULL,
  start_date TIMESTAMPTZ NULL DEFAULT NULL,
  end_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_product_user
    FOREIGN KEY (user_id)
    REFERENCES "shop"."user" (id));
	
CREATE INDEX idx_product_user ON "shop"."product" (user_id);
CREATE UNIQUE INDEX uq_slug ON "shop"."product" (slug ASC);
	
--PRODUCT_REVIEW
CREATE TABLE "shop"."product_review" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  product_id BIGINT NOT NULL,
  parent_id BIGINT NULL DEFAULT NULL,
  title VARCHAR NOT NULL,
  rating SMALLINT NOT NULL DEFAULT 0,
  published BOOLEAN NOT NULL DEFAULT false,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  published_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_review_product
    FOREIGN KEY (product_id)
    REFERENCES "shop"."product" (id),
  CONSTRAINT fk_review_parent
    FOREIGN KEY (parent_id)
    REFERENCES "shop"."product_review" (id)
	);

CREATE INDEX idx_review_product ON "shop"."product_review" (product_id ASC);
CREATE INDEX idx_review_parent ON "shop"."product_review" (parent_id ASC);
  
--CATEGORY
CREATE TABLE "shop"."category" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  parent_id BIGINT NULL DEFAULT NULL,
  title VARCHAR NOT NULL,
  meta_title VARCHAR NULL DEFAULT NULL,
  slug VARCHAR NOT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_category_parent
	FOREIGN KEY (parent_id)
	REFERENCES "shop"."category" (id)
);

CREATE INDEX idx_category_parent ON "shop"."category" (parent_id ASC);

--PRODUCT_CATEGORY
CREATE TABLE "shop"."product_category" (
  product_id BIGINT NOT NULL,
  category_id BIGINT NOT NULL,
  PRIMARY KEY (product_id, category_id),
  CONSTRAINT fk_pc_product
    FOREIGN KEY (product_id)
    REFERENCES "shop"."product" (id),
  CONSTRAINT fk_pc_category
    FOREIGN KEY (category_id)
    REFERENCES "shop"."category" (id)
);
	
CREATE  INDEX idx_pc_category ON "shop"."product_category" (category_id ASC);
CREATE  INDEX idx_pc_product ON "shop"."product_category" (product_id ASC);

--CART
CREATE TABLE "shop"."cart" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  user_id BIGINT NULL DEFAULT NULL,
  session_id VARCHAR NOT NULL,
  token VARCHAR NOT NULL,
  status SMALLINT NOT NULL DEFAULT 0,
  first_name VARCHAR NULL DEFAULT NULL,
  middle_name VARCHAR NULL DEFAULT NULL,
  last_name VARCHAR NULL DEFAULT NULL,
  mobile VARCHAR NULL,
  email VARCHAR NULL,
  line1 VARCHAR NULL DEFAULT NULL,
  line2 VARCHAR NULL DEFAULT NULL,
  city VARCHAR NULL DEFAULT NULL,
  province VARCHAR NULL DEFAULT NULL,
  country VARCHAR NULL DEFAULT NULL,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  updated_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_cart_user
    FOREIGN KEY (user_id)
    REFERENCES "shop"."user" (id)
);

CREATE INDEX idx_cart_user ON "shop"."cart" (user_id);

--CART_ITEM
CREATE TABLE "shop"."cart_item" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  product_id BIGINT NOT NULL,
  cart_id BIGINT NOT NULL,
  sku VARCHAR NOT NULL,
  price FLOAT NOT NULL DEFAULT 0,
  discount FLOAT NOT NULL DEFAULT 0,
  quantity SMALLINT NOT NULL DEFAULT 0,
  active BOOLEAN NOT NULL DEFAULT false,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  updated_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_cart_item_product
    FOREIGN KEY (product_id)
    REFERENCES "shop"."product" (id),
  CONSTRAINT fk_cart_item_cart
    FOREIGN KEY (cart_id)
    REFERENCES "shop"."cart" (id)
);

CREATE INDEX idx_cart_item_product ON "shop"."cart_item" (product_id ASC);
CREATE INDEX idx_cart_item_cart ON "shop"."cart_item" (cart_id ASC);
  
--ORDER
CREATE TABLE "shop"."order" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  user_id BIGINT NULL DEFAULT NULL,
  session_id VARCHAR NOT NULL,
  token VARCHAR NOT NULL,
  status SMALLINT NOT NULL DEFAULT 0,
  sub_total FLOAT NOT NULL DEFAULT 0,
  grand_total FLOAT NOT NULL DEFAULT 0,
  item_discount FLOAT NOT NULL DEFAULT 0,
  discount FLOAT NOT NULL DEFAULT 0,
  tax FLOAT NOT NULL DEFAULT 0,
  shipping FLOAT NOT NULL DEFAULT 0,
  total FLOAT NOT NULL DEFAULT 0,
  promo VARCHAR NULL DEFAULT NULL,
  first_name VARCHAR NULL DEFAULT NULL,
  middle_name VARCHAR NULL DEFAULT NULL,
  last_name VARCHAR NULL DEFAULT NULL,
  mobile VARCHAR NULL,
  email VARCHAR NULL,
  line1 VARCHAR NULL DEFAULT NULL,
  line2 VARCHAR NULL DEFAULT NULL,
  city VARCHAR NULL DEFAULT NULL,
  province VARCHAR NULL DEFAULT NULL,
  country VARCHAR NULL DEFAULT NULL,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  updated_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_order_user
    FOREIGN KEY (user_id)
    REFERENCES "shop"."user" (id)
);

CREATE INDEX idx_order_user ON "shop"."order" (user_id);

--ORDER_ITEM
CREATE TABLE "shop"."order_item" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  product_id BIGINT NOT NULL,
  order_id BIGINT NOT NULL,
  sku VARCHAR NOT NULL,
  price FLOAT NOT NULL DEFAULT 0,
  discount FLOAT NOT NULL DEFAULT 0,
  quantity SMALLINT NOT NULL DEFAULT 0,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  updated_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_order_item_product
    FOREIGN KEY (product_id)
    REFERENCES "shop"."product" (id),
  CONSTRAINT fk_order_item_order
	FOREIGN KEY (order_id)
	REFERENCES "shop"."order" (id)
);

CREATE INDEX idx_order_item_product ON "shop"."order_item" (product_id ASC);
CREATE INDEX idx_order_item_order ON "shop"."order_item" (order_id ASC);
  
--TRANSACTION
CREATE TABLE "shop"."transaction" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY,
  user_id BIGINT NOT NULL,
  order_id BIGINT NOT NULL,
  code VARCHAR NOT NULL,
  type SMALLINT NOT NULL DEFAULT 0,
  mode SMALLINT NOT NULL DEFAULT 0,
  status SMALLINT NOT NULL DEFAULT 0,
  created_date TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
  updated_date TIMESTAMPTZ NULL DEFAULT NULL,
  content TEXT NULL DEFAULT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_transaction_user
    FOREIGN KEY (user_id)
    REFERENCES "shop"."user" (id),
  CONSTRAINT fk_transaction_order
	FOREIGN KEY (order_id)
	REFERENCES "shop"."order" (id)
);

CREATE INDEX idx_transaction_user ON "shop"."transaction" (user_id ASC);
CREATE INDEX idx_transaction_order ON "shop"."transaction" (order_id ASC);